
analyzer:
  exclude:
    - build/**
    - test/**
    - vivafit_plugins/**
  errors:
    unused_field: ignore
    unused_element: ignore

linter:
  rules:
    # STYLE
    - camel_case_types
    - camel_case_extensions
    - library_names
    - file_names
    - library_prefixes
    - non_constant_identifier_names
    - constant_identifier_names # prefer
    - directives_ordering
    - curly_braces_in_flow_control_structures

    # USAGE
    - implementation_imports
    - avoid_relative_lib_imports # prefer
    - prefer_relative_imports # prefer
    - prefer_adjacent_string_concatenation
    - prefer_interpolation_to_compose_strings # prefer
    - unnecessary_brace_in_string_interps # avoid
    - prefer_collection_literals
    - avoid_function_literals_in_foreach_calls # avoid
    - prefer_iterable_whereType
    - prefer_function_declarations_over_variables
    - unnecessary_lambdas
    - prefer_equal_for_default_values
    - avoid_init_to_null
    - unnecessary_getters_setters
    #- unnecessary_getters # prefer # Disabled pending fix: https://github.com/dart-lang/linter/issues/23
    #- prefer_expression_function_bodies # consider
    - unnecessary_this
    - prefer_initializing_formals
    - type_init_formals
    - empty_constructor_bodies
    - unnecessary_new
    - unnecessary_const
    - avoid_catching_errors
    - use_rethrow_when_possible
    - avoid_unnecessary_containers

    # DESIGN
    - use_to_and_as_if_applicable # prefer
    - avoid_classes_with_only_static_members # avoid
    - prefer_mixin
    - prefer_final_fields # prefer
    - use_setters_to_change_properties
    - avoid_returning_null # avoid
    - avoid_returning_this # avoid
    - type_annotate_public_apis # prefer
    #- prefer_typing_uninitialized_variables # consider
    - omit_local_variable_types # avoid
    - avoid_types_on_closure_parameters # avoid
    - avoid_return_types_on_setters # avoid
    - prefer_generic_function_type_aliases
    - avoid_private_typedef_functions # prefer
    #- use_function_type_syntax_for_parameters # consider
    - hash_and_equals
    - avoid_equals_and_hash_code_on_mutable_classes # avoid
    - avoid_null_checks_in_equality_operators
    - prefer_const_constructors

    # GOOGLE
    - always_declare_return_types
    - always_require_non_null_named_parameters
    - annotate_overrides
    - avoid_empty_else
    - avoid_shadowing_type_parameters
    - avoid_types_as_parameter_names
    - empty_catches
    - no_duplicate_case_values
    - null_closures
    - prefer_conditional_assignment
    - prefer_contains
    - prefer_for_elements_to_map_fromIterable
    - prefer_if_null_operators
    - prefer_is_empty
    - prefer_is_not_empty
    - prefer_single_quotes
    - prefer_spread_collections
    - recursive_getters
    - unnecessary_null_in_if_null_operators
    - unrelated_type_equality_checks
    - use_function_type_syntax_for_parameters
    - valid_regexps